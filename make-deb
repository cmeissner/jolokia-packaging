#!/bin/bash
NAME="jolokia"
JOLOKIA_VERSION="1.3.5"
HAWTIO_VERSION="1.4.66"
JOLOKIA_URL="https://repo1.maven.org/maven2/org/jolokia"
HAWTIO_URL="https://oss.sonatype.org/content/repositories/public/io/hawt/hawtio-app"
ITERATION="2~bnotk1"
ARCH="all"
mkdir -p usr/lib/jolokia/
rm usr/lib/jolokia/*.jar*
pushd usr/lib/jolokia/
wget -c ${JOLOKIA_URL}/jolokia-jvm/${JOLOKIA_VERSION}/jolokia-jvm-${JOLOKIA_VERSION}-agent.jar
wget -c ${JOLOKIA_URL}/jolokia-client-java/${JOLOKIA_VERSION}/jolokia-client-java-${JOLOKIA_VERSION}.jar
wget -c ${HAWTIO_URL}/${HAWTIO_VERSION}/hawtio-app-${HAWTIO_VERSION}.jar
popd
cd ..
rm ${NAME}_${JOLOKIA_VERSION}-${ITERATION}_${ARCH}.deb
fpm -s dir -t deb \
	-n ${NAME} \
	-v ${JOLOKIA_VERSION} \
	--iteration ${ITERATION} \
	--provides ${NAME} \
	--license "Apache License 2.0" \
	--url "http://www.jolokia.org/" \
	--vendor "https://github.com/rhuss" \
	--description "Jolokia is an HTTP/JSON bridge for remote JMX access.\n It is an alternative to standard JSR 160 connectors,\n using an agent based approach. The client communicates\n with the agent over HTTP (GET or POST) with the request\n and response payload represented in JSON. It transparently\n bridges to the JMX world, talking to clients on the frontend\n via a REST-like protocol and to a JMX MBeanServer on the backend." \
	--config-files /etc/default/jolokia \
	--config-files /etc/jolokia/jvm-agent.properties \
	--directories /etc/jolokia \
	--directories /usr/lib/jolokia \
	-d default-jre \
	-m "Stuart Warren <stuart.warren@ocado.com>" \
	-a ${ARCH} \
	-C ./${NAME}-packaging \
	etc usr

